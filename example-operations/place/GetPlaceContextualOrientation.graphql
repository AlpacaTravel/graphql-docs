# Query a place and contextualise it's location to other points of interest
# such as accomodation, towns, or other contextual places you are showing in
# relation to another place. Query the bearing, compass or distance to let
# contextualise the position.

query getPlaceContextualOrientation(
  $id: ID!
  $longitude: Float!
  $latitude: Float!
  $distanceUnit: DistanceUnit!
  $bearingUnit: AngleUnit!
) {
  place(
    # Provide a place ID, example for a cafe in Melbourne
    id: $id
  ) {
    # Identifiers
    id
    __typename
    # Name of place
    name
    # Calculate information contextualising position towards other positions
    towards(
      # Provide many different POI that you have, such as major towns or
      # accomodation or arrival/departure locations
      positions: [{ lon: $longitude, lat: $latitude }]
    ) {
      # Provides a 360 degree bearing
      bearing(unit: $bearingUnit)
      # Provides a 16-point compass (N, NNE, NE, ENE, E etc)
      compass
      # Provides a distance (line of sight), default metric unit
      # use distance(unit: <UNIT>) such as Feet, Miles, Kilometers etc to return
      distance(unit: $distanceUnit)
    }
  }
}
